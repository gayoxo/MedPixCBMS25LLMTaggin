[
    {
        "text": "The lungs and pleural spaces show no acute abnormality. Heart size and pulmonary vascularity within normal limits.",
        "res": "import json\nfrom typing import List, Dict\n\ndef extract_findings(json_ini: List[str], text_to_analyze: str) -> List[Dict]:\n    findings = []\n\n    for finding in json_ini:\n        found_in_text = False\n        if \"absent\" not in json.loads(finding):\n            for key_value in json.loads(finding):\n                word = key_value[\"word\"]\n                description = key_value[\"description\"]\n\n                if text_to_analyze.lower().find(word) != -1:\n                    found_in_text = True\n                    break\n\n        if found_in_text:\n            finding_dict = {\n                \"finding\": finding,\n                \"absent\": False if \"absent\" not in json.loads(finding) else True,\n                \"text\": text_to_analyze\n            }\n            findings.append(findings_dict)\n\n    return findings"
    },
    {
        "text": "Stable right chest wall pacemaker with leads overlie the right atrium and right ventricle. Stable cardiomegaly. Calcified thoracic aorta is unchanged. Stable mild interstitial opacities. Unchanged dense retrocardiac opacities. No pneumothorax or large effusion.",
        "res": "import json\nimport re\n\ndef extract_clinically_significant_findings(json_ini, text_to_analyze):\n    # Define a list of normal findings and anatomical observations to exclude\n    excluded_terms = [\n        'unremarkable structures', \n        'normal appearance',\n        'no abnormalities detected',\n        'mild age-related changes',\n        'typical anatomy'\n    ]\n\n    # Initialize an empty list to store the extracted clinically significant findings\n    findings = []\n\n    # Loop through each finding in the json_ini list\n    for finding in json_ini:\n        # Define a pattern to match terms that indicate the absence of a finding (e.g., \"absent findings\" or \"no abnormalities detected\")\n        absent_pattern = re.compile(r'absent|no|none', re.IGNORECASE)\n        \n        if absent_pattern.search(finding):\n            # If the term indicates the absence, add it to the findings list with its corresponding boolean value\n            findings.append({\n                'finding': finding,\n                'absent': True,\n                'text': None  # Add text later if needed.\n            })\n\n        else:\n            # Otherwise, create a pattern to match terms that describe a clinical finding or disease\n            finding_pattern = re.compile(f'({finding})|({re.escape(finding)})', re.IGNORECASE)\n            \n            # Check if the term matches any of the patterns in the text_to_analyze\n            for match in finding_pattern.finditer(text_to_analyze):\n                # Get the matched section of the text as a string\n                found_text = match.group()\n                \n                # Filter out excluded terms\n                if found_text.lower() not in (term.lower() for term in excluded_terms):\n                    # Add the extracted finding to the findings list\n                    findings.append({\n                        'finding': found_text,\n                        'absent': False,  # Add boolean value later.\n                        'text': found_text  # The text relevant to this finding is inside `Text to analyze`.\n                    })\n\n    # Return the extracted clinically significant findings as a JSON array\n    return json.dumps(findings)\n\n# Test the function with sample input and print output\njson_ini = [\n    \"8 mm right middle lobe pulmonary nodule\", \n    \"aortic atherosclerotic vascular calcification\", \n    \"atherosclerotic calcifications of the aorta\",\n    \"bilateral apical scarring\", \n    \"bilateral reticular opacities\", \n    \"bronchial obstruction\",\n    \"bronchiectasis\", \n    \"calcified granuloma left upper lobe\",\n    \"cardiomegaly\",\n    \"diffuse right lower lobe airspace opacity\",\n    \"elevation of right hemidiaphragm\", \n    \"fibrotic scarring\",\n    \"flattened diaphragm\",\n    \"hyperinflated lungs\",\n    \"increased retrosternal airspace\",\n    \"infiltrate in the lingula\",\n    \"infiltrate in the right middle lobe\",\n    \"infiltrate in the right upper lobe\",\n    \"interstitial opacities\",\n    \"large breast mass\",\n    \"left lower lobe air space opacity with consolidation atelectasis\",\n    \"left lower lobe of consolidation or atelectasis\",\n    \"low lung volumes with bronchovascular crowding\", \n    \"lumbar degenerative disc disease\",\n    \"mild thoracic aortic dilatation\",\n    \"minimal right middle lobe atelectasis\",\n    \"multiple opacities in the right mid lung, 3 subsegmental atelectasis\",\n    \"no pleural effusion\",\n    \"normal cardiac contour\",\n    \"patchy left lower lobe airspace disease\",\n    \"posttraumatic deformities of the left posterior ribs\", \n    \"pulmonary edema due to acute respiratory distress syndrome (ARDS)\",\n    \"right-sided pleural effusion\",\n    \"small left-sided effusion\",\n    \"soft tissue density projected over the right mid chest\",\n    \"spine dextrocurvature\", \n    \"subepicardial fibrosis\"\n]\n\ntext_to_analyze = \"\"\"\nStable right chest wall pacemaker with leads overlie the right atrium and right ventricle. Stable cardiomegaly. Calcified thoracic aorta is unchanged. Stable mild interstitial opacities. Unchanged dense retrocardiac opacities. No pneumothorax or large effusion.\"\"\"\n\nprint(extract_clinically_significant_findings(json_ini, text_to_analyze))"
    },
    {
        "text": "The lungs are clear bilaterally. Specifically, no evidence of focal consolidation, pneumothorax, or pleural effusion. Cardio mediastinal silhouette is unremarkable. Visualized osseous structures of the thorax demonstrate stable, mild multilevel thoracolumbar degenerative disc disease without acute abnormality. Upper abdominal midline surgical sutures are likewise stable.",
        "res": "Here is a Python solution that extracts detected clinically relevant findings and diseases from the given medical text:\n\n```python\nimport re\n\ndef extract_findings(text):\n    jsonIni = ['8 mm right middle lobe pulmonary nodule', 'aortic atherosclerotic vascular calcification', \n               'atherosclerotic calcifications of the aorta', 'bilateral apical scarring', 'bilateral reticular opacities',\n               'bronchial obstruction', 'bronchiectasis', 'calcified granuloma left upper lobe', 'cardiomegaly',\n               'diffuse right lower lobe airspace opacity', 'elevation of right hemidiaphragm', 'fibrotic scarring',\n               'flattened diaphragm', 'hyperinflated lungs', 'increased retrosternal airspace', \n               'infiltrate in the lingula', 'infiltrate in the right middle lobe', \n               'infiltrate in the right upper lobe', 'interstitial opacities', 'large breast mass',\n               'left lower lobe air space opacity with consolidation atelectasis', \n               'left lower lobe of consolidation or atelectasis', 'low lung volumes with bronchovascular crowding',\n               'lumbar degenerative disc disease', 'mild thoracic aortic dilatation', 'minimal right middle lobe atelectasis',\n               'multiple opacities in the right mid lung, 3 subsegmental atelectasis', \n               'no pleural effusion', 'normal cardiac contour', 'patchy left lower lobe airspace disease',\n               'posttraumatic deformities of the left posterior ribs', 'pulmonary edema due to acute respiratory distress syndrome (ARDS)',\n               'right-sided pleural effusion', 'small left-sided effusion', \n               'soft tissue density projected over the right mid chest', 'spine dextrocurvature',\n               'subepicardial fibrosis']\n\n    findings = []\n    \n    for finding in jsonIni:\n        pattern = re.compile(re.escape(finding), re.IGNORECASE)\n        match = pattern.search(text)\n\n        if match:\n            text_relevant_section = \" \".join([word for word in text.split() if (match.start(0) <= word.find(match.group()) and \n                                                                        word.find(match.group()) < match.end(0)]))\n            \n            findings.append({\"finding\": finding, \"absent\": False, \"text\": text_relevant_section})\n        else:\n            findings.append({\"finding\": finding, \"absent\": True, \"text\": \"\"})\n\n    return findings\n\n# Example usage\nText_to_analyze = 'The lungs are clear bilaterally. Specifically, no evidence of focal consolidation, pneumothorax, or pleural effusion. Cardio mediastinal silhouette is unremarkable. Visualized osseous structures of the thorax demonstrate stable, mild multilevel thoracolumbar degenerative disc disease without acute abnormality. Upper abdominal midline surgical sutures are likewise stable.'\n\nfindings = extract_findings(Text_to_analyze)\nprint(json.dumps(findings, indent=4))\n```\nThis code uses regular expressions to identify clinically relevant findings and diseases within the provided medical text. It returns a JSON array where each object includes `\"finding\"`, `\"absent\"`, and `\"text\"` values as required.\nNote: The extracted data is specific for finding of `Text_to_analyze`."
    },
    {
        "text": "The heart and cardiomediastinal silhouette are normal in size and contour. There is no focal airspace opacity, pleural effusion, or pneumothorax. The osseous structures are intact.",
        "res": "def extract_findings(jsonIni, Text_to_analyze):\n    # Define clinically relevant keywords and phrases\n    keywords = [\n        \"atherosclerotic calcifications\", \n        \"bronchial obstruction\", \n        \"bronchiectasis\", \n        \"calcified granuloma\", \n        \"cardiomegaly\", \n        \"diffuse right lower lobe airspace opacity\", \n        \"elevation of right hemidiaphragm\", \n        \"fibrotic scarring\", \n        \"flattened diaphragm\", \n        \"hyperinflated lungs\", \n        \"increased retrosternal airspace\", \n        \"infiltrate in the lingula\", \n        \"infiltrate in the right middle lobe\", \n        \"infiltrate in the right upper lobe\", \n        \"interstitial opacities\", \n        \"large breast mass\", \n        \"left lower lobe air space opacity with consolidation atelectasis\", \n        \"low lung volumes with bronchovascular crowding\", \n        \"lumbar degenerative disc disease\", \n        \"mild thoracic aortic dilatation\", \n        \"minimal right middle lobe atelectasis\", \n        \"multiple opacities in the right mid lung, 3 subsegmental atelectasis\", \n        \"pulmonary edema due to acute respiratory distress syndrome (ARDS)\", \n        \"right-sided pleural effusion\", \n        \"small left-sided effusion\",\n    ]\n\n    # Extract findings from text\n    findings = []\n    for finding in jsonIni:\n        if finding.lower() in keywords:\n            findings.append({\n                'finding': finding,\n                'absent': False,  # Assume present unless specified otherwise\n                'text': Text_to_analyze.replace(f' {finding}', '') \n            })\n\n    return findings"
    },
    {
        "text": "Patient's chest X-ray and lateral chest examination was obtained. The heart silhouette and mediastinal contours are not enlarged. Lungs demonstrate left lower lobe air space opacity with consolidation atelectasis without significant change. There is no effusion or pneumothorax.",
        "res": "import json\nfrom typing import List\n\ndef analyze_text(json_ini: List[str], text_to_analyze: str) -> List[dict]:\n    # Predefined list of clinically relevant findings and diseases\n    findings = {\n        'aortic atherosclerotic vascular calcification': {'absent': False, 'text': None},\n        'atherosclerotic calcifications of the aorta': {'absent': False, 'text': None},\n        'bronchial obstruction': {'absent': False, 'text': None},\n        'bronchiectasis': {'absent': False, 'text': None},\n        'calcified granuloma left upper lobe': {'absent': False, 'text': None},\n        'cardiomegaly': {'absent': True, 'text': None},\n        'diffuse right lower lobe airspace opacity': {'absent': False, 'text': None},\n        'elevation of right hemidiaphragm': {'absent': False, 'text': None},\n        'fibrotic scarring': {'absent': False, 'text': None},\n        'flattened diaphragm': {'absent': False, 'text': None},\n        'hyperinflated lungs': {'absent': False, 'text': None},\n        'increased retrosternal airspace': {'absent': False, 'text': None},\n        'infiltrate in the lingula': {'absent': False, 'text': None},\n        'infiltrate in the right middle lobe': {'absent': False, 'text': None},\n        'infiltrate in the right upper lobe': {'absent': False, 'text': None},\n        'interstitial opacities': {'absent': False, 'text': None},\n        'large breast mass': {'absent': True, 'text': None},\n        'left lower lobe air space opacity with consolidation atelectasis': {'absent': False, 'text': None},\n        'left lower lobe of consolidation or atelectasis': {'absent': False, 'text': None},\n        'low lung volumes with bronchovascular crowding': {'absent': False, 'text': None},\n        'lumbar degenerative disc disease': {'absent': True, 'text': None},\n        'mild thoracic aortic dilatation': {'absent': True, 'text': None},\n        'minimal right middle lobe atelectasis': {'absent': False, 'text': None},\n        'multiple opacities in the right mid lung, 3 subsegmental atelectasis': {'absent': False, 'text': None},\n        'pulmonary edema due to acute respiratory distress syndrome (ARDS)': {'absent': True, 'text': None},\n        'right-sided pleural effusion': {'absent': True, 'text': None},\n        'small left-sided effusion': {'absent': True, 'text': None},\n        'soft tissue density projected over the right mid chest': {'absent': False, 'text': None},\n        'spine dextrocurvature': {'absent': True, 'text': None},\n        'subepicardial fibrosis': {'absent': True, 'text': None}\n    }\n\n    # Initialize an empty list to store the results\n    result = []\n\n    # Iterate over each finding in the predefined list\n    for finding in findings:\n        if finding in json_ini:\n            text_to_analyze_finding = {\n                \"finding\": finding,\n                \"absent\": 'false' if findings[finding]['absent'] else 'true',\n                \"text\": json.loads(f'''{{\"text\": \"{findings[finding]['text']}\"}}''')\n            }\n            result.append(text_to_analyze_finding)\n\n    # Return the list of results\n    return json.dumps(result)"
    },
    {
        "text": "Broken of the 4th rib, similar to the prior study. Stable multiple surgical clips in the left hilar area. Stable cardiomediastinal silhouette. Pulmonary vasculatures are within normal limits. No focal consolidation, pleural effusion or pneumothorax. Unremarkable bony structure.",
        "res": "import json\nfrom typing import List, Dict\n\ndef extract_clinically_relevant_findings(jsonIni: List[str], Text_to_analyze: str) -> List[Dict]:\n    relevant_findings = []\n\n    for finding in jsonIni:\n        if finding.startswith('pulmonary') or finding.startswith('aortic'):\n            if 'consolidation' in finding or 'atelectasis' in finding or 'pleural' in finding:\n                relevant_findings.append({\n                    \"finding\": finding,\n                    \"absent\": False,\n                    \"text\": \"Pulmonary\"\n                })\n\n        elif finding.lower().startswith('cardio') and ('vascular calcification' in finding or 'aortic' in finding):\n            if 'calcifications' not in Text_to_analyze:\n                relevant_findings.append({\n                    \"finding\": finding,\n                    \"absent\": False,\n                    \"text\": \"Cardiac\"\n                })\n\n        elif finding.lower().startswith('bronchi') and ('obstruction' in finding or 'ectasis' in finding):\n            if 'airspace opacity' not in Text_to_analyze:\n                relevant_findings.append({\n                    \"finding\": finding,\n                    \"absent\": False,\n                    \"text\": \"Pulmonary\"\n                })\n\n        elif finding.lower().startswith('interstitial') and ('opacities' in finding or 'infiltrate' in finding):\n            if 'fibrrosis' not in Text_to_analyze:\n                relevant_findings.append({\n                    \"finding\": finding,\n                    \"absent\": False,\n                    \"text\": \"Pulmonary\"\n                })\n\n        elif finding.lower().startswith('lumbar') and ('degenerative disc disease' in finding):\n            if 'mild thoracic aortic dilatation' not in Text_to_analyze:\n                relevant_findings.append({\n                    \"finding\": finding,\n                    \"absent\": False,\n                    \"text\": \"Lumbar\"\n                })\n\n        elif finding.lower().startswith('spine') and ('dextrocurvature' in finding):\n            if 'mild thoracic aortic dilatation' not in Text_to_analyze:\n                relevant_findings.append({\n                    \"finding\": finding,\n                    \"absent\": False,\n                    \"text\": \"Spinal\"\n                })\n\n    return relevant_findings"
    },
    {
        "text": "There is chronic asymmetric elevation of the right hemidiaphragm. Compared with the prior study, there is mildly increased streaky airspace disease in the right lung base. Hilar prominence appears stable. There is no pneumothorax or large pleural effusion. Heart size is stable and grossly normal. There are no acute bony findings.",
        "res": "import json\nfrom nltk.corpus import stopwords\nfrom nltk.tokenize import word_tokenize\n\n# List of stopwords to exclude in our analysis\nstop_words = set(stopwords.words('english'))\n\ndef extract_clinically_relevant_findings(text):\n    # Tokenize text and remove punctuation and special characters\n    tokens = word_tokenize(text)\n    \n    # Remove numbers from tokens as they do not carry clinical significance\n    filtered_tokens = [t for t in tokens if not any(c.isdigit() for c in t)]\n    \n    # Convert to lowercase and remove stopwords\n    cleaned_tokens = [t.lower() for t in filtered_tokens if t.isalpha() and t.lower() not in stop_words]\n    \n    # List of clinically relevant findings and diseases \n    jsonIni = ['8 mm right middle lobe pulmonary nodule', 'aortic atherosclerotic vascular calcification',\n               'atherosclerotic calcifications of the aorta', 'bilateral apical scarring',\n               'bilateral reticular opacities', 'bronchial obstruction',\n               'bronchiectasis', 'calcified granuloma left upper lobe',\n               'cardiomegaly', 'diffuse right lower lobe airspace opacity',\n               'elevation of right hemidiaphragm', 'fibrotic scarring',\n               'flattened diaphragm', 'hyperinflated lungs',\n               'increased retrosternal airspace', 'infiltrate in the lingula',\n               'infiltrate in the right middle lobe',\n               'infiltrate in the right upper lobe', 'interstitial opacities',\n               'large breast mass', 'left lower lobe air space opacity with consolidation atelectasis',\n               'left lower lobe of consolidation or atelectasis', \n               'low lung volumes with bronchovascular crowding', \n               'lumbar degenerative disc disease', \n               'mild thoracic aortic dilatation', \n               'minimal right middle lobe atelectasis',\n               'multiple opacities in the right mid lung, 3 subsegmental atelectasis',\n               'no pleural effusion',\n               'normal cardiac contour', \n               'patchy left lower lobe airspace disease', \n               'posttraumatic deformities of the left posterior ribs', \n               'pulmonary edema due to acute respiratory distress syndrome (ARDS)',\n               'right-sided pleural effusion', \n               'small left-sided effusion',\n               'soft tissue density projected over the right mid chest',\n               'spine dextrocurvature',\n               'subepicardial fibrosis']\n\n    # Identify findings based on presence in our JSON list\n    findings = []\n    for finding in jsonIni:\n        if finding.lower() not in [t for t in cleaned_tokens]:\n            continue\n        \n        found_text = None\n        for token in filtered_tokens:\n            if token == finding.lower():\n                found_text = tokens[tokens.index(token)]\n        \n        # Ensure we have the relevant text from `Text to analyze` \n        if 'there is' not in found_text or \"comparing with\" not in found_text:\n            continue\n\n        findings.append({\n            \"finding\": finding,\n            \"absent\": False,  # Check all these conditions\n            \"text\": {\n                \"section\": \"Clinical Presentation\",\n                \"text\": text.split(\"there is\")[-1].split(\"comparing with\")[0] \n            }\n        })\n\n    return findings\n\n# Extract findings from `Text to analyze`\njsonIni = ['8 mm right middle lobe pulmonary nodule', 'aortic atherosclerotic vascular calcification',\n           'atherosclerotic calcifications of the aorta', 'bilateral apical scarring',\n           'bilateral reticular opacities', 'bronchial obstruction',\n           'bronchiectasis', 'calcified granuloma left upper lobe',\n           'cardiomegaly', 'diffuse right lower lobe airspace opacity',\n           'elevation of right hemidiaphragm', 'fibrotic scarring',\n           'flattened diaphragm', 'hyperinflated lungs',\n           'increased retrosternal airspace', 'infiltrate in the lingula',\n           'infiltrate in the right middle lobe',\n           'infiltrate in the right upper lobe', 'interstitial opacities',\n           'large breast mass', 'left lower lobe air space opacity with consolidation atelectasis',\n           'left lower lobe of consolidation or atelectasis', \n           'low lung volumes with bronchovascular crowding', \n           'lumbar degenerative disc disease', \n           'mild thoracic aortic dilatation', \n           'minimal right middle lobe atelectasis',\n           'multiple opacities in the right mid lung, 3 subsegmental atelectasis',\n           'no pleural effusion',\n           'normal cardiac contour', \n           'patchy left lower lobe airspace disease', \n           'posttraumatic deformities of the left posterior ribs', \n           'pulmonary edema due to acute respiratory distress syndrome (ARDS)',\n           'right-sided pleural effusion', \n           'small left-sided effusion',\n           'soft tissue density projected over the right mid chest',\n           'spine dextrocurvature',\n           'subepicardial fibrosis']\n\ntext = \"There is chronic asymmetric elevation of the right hemidiaphragm. Compared with the prior study, there is mildly increased streaky airspace disease in the right lung base. Hilar prominence appears stable. There is no pneumothorax or large pleural effusion. Heart size is stable and grossly normal. There are no acute bony findings.\"\nfindings = extract_clinically_relevant_findings(text)\n\n# Print the JSON array\nprint(json.dumps(findings, indent=4))"
    },
    {
        "text": "The cardiomediastinal silhouette is within normal limits for appearance. The thoracic aorta is tortuous. No focal areas of pulmonary consolidation. No pneumothorax. No large pleural effusion. Mild degenerative changes and osteopenia of the thoracic spine. Overlying EKG leads.",
        "res": "import json\nfrom typing import List, Dict\n\ndef extract_findings(jsonIni: List[str], Text_to_analyze: str) -> List[Dict]:\n    # List of normal findings and general descriptions to exclude\n    excluded_terms = [\n        \"unremarkable structures\",\n        \"normal appearance\",\n        \"no abnormalities detected\",\n        \"mild age-related changes\",\n        \"typical anatomy\",\n        \"absent findings\"\n    ]\n\n    extracted_findings: List[Dict] = []\n\n    # Loop through each finding in jsonIni\n    for finding in jsonIni:\n        # Initialize the values for this finding\n        present_in_text = False\n        text_relevant_for_finding = \"\"\n\n        # Check if the term appears in Text_to_analyze\n        if finding.lower() in (term.lower() for term in Text_to_analyze.split()):\n            present_in_text = True\n\n            # Find the specific section of Text_to_analyze relevant to this finding\n            for line in Text_to_analyze.split('\\n'):\n                if finding.lower() in line.lower():\n                    text_relevant_for_finding += line + '\\n'\n\n        # Determine whether the term is clinically significant and should be included\n        is_significant = not (finding in excluded_terms)\n\n        # Create a dictionary for this finding with relevant information\n        finding_dict: Dict = {\n            \"finding\": finding,\n            \"absent\": present_in_text,\n            \"text\": text_relevant_for_finding.strip()\n        }\n\n        if is_significant:\n            extracted_findings.append(finding_dict)\n\n    return extracted_findings\n\n# Test the function with the provided input\njsonIni: List[str] = [\n    '8 mm right middle lobe pulmonary nodule',\n    'aortic atherosclerotic vascular calcification',\n    'atherosclerotic calcifications of the aorta',\n    'bilateral apical scarring',\n    'bilateral reticular opacities',\n    'bronchial obstruction',\n    'bronchiectasis',\n    'calcified granuloma left upper lobe',\n    'cardiomegaly',\n    'diffuse right lower lobe airspace opacity',\n    'elevation of right hemidiaphragm',\n    'fibrotic scarring',\n    'flattened diaphragm',\n    'hyperinflated lungs',\n    'increased retrosternal airspace',\n    'infiltrate in the lingula',\n    'infiltrate in the right middle lobe',\n    'infiltrate in the right upper lobe',\n    'interstitial opacities',\n    'large breast mass',\n    'left lower lobe air space opacity with consolidation atelectasis',\n    'left lower lobe of consolidation or atelectasis',\n    'low lung volumes with bronchovascular crowding',\n    'lumbar degenerative disc disease',\n    'mild thoracic aortic dilatation',\n    'minimal right middle lobe atelectasis',\n    'multiple opacities in the right mid lung, 3 subsegmental atelectasis',\n    'no pleural effusion',\n    'normal cardiac contour',\n    'patchy left lower lobe airspace disease',\n    'posttraumatic deformities of the left posterior ribs',\n    'pulmonary edema due to acute respiratory distress syndrome (ARDS)',\n    'right-sided pleural effusion',\n    'small left-sided effusion',\n    'soft tissue density projected over the right mid chest',\n    'spine dextrocurvature',\n    'subepicardial fibrosis'\n]\n\nText_to_analyze: str = \"\"\"\nThe cardiomediastinal silhouette is within normal limits for appearance. \nThe thoracic aorta is tortuous. No focal areas of pulmonary consolidation. \nNo pneumothorax. No large pleural effusion. Mild degenerative changes and osteopenia of the thoracic spine.\nOverlying EKG leads.\n\n\"\"\"\n\nprint(json.dumps(extract_findings(jsonIni, Text_to_analyze), indent=4))"
    },
    {
        "text": "The lungs are clear. There is no focal airspace consolidation. No pleural effusion or pneumothorax. Heart size and mediastinal contour are within normal limits. There are degenerative changes of the lumbar spine.",
        "res": "import re\nimport json\n\ndef find_clinically_relevant_findings(jsonIni, Text_to_analyze):\n    # Define excluded terms for normal findings and anatomical descriptions\n    excluded_terms = [\n        r\"unremarkable structures\",\n        r\"normal appearance\",\n        r\"No abnormalities detected\",\n        r\"Mild age-related changes\",\n        r\"Typical anatomy\",\n        r\"Absent Findings\"\n    ]\n\n    # Initialize an empty list to store clinically relevant findings and diseases\n    clinically_relevant_findings = []\n\n    # Iterate over each finding in the jsonIni list\n    for finding in jsonIni:\n        # Use regular expressions to find matching terms in the Text_to_analyze text\n        pattern = re.compile(f\"(?:^{finding})|({finding})\", re.IGNORECASE)\n        match = pattern.search(Text_to_analyze)\n\n        if match:\n            # Extract the section of the text relevant for the identification\n            relevant_text = re.sub(rf\".*{re.escape(findings)}.*\", \"\", Text_to_analyze, flags=re.DOTALL)\n\n            # Identify if the term is absent\n            absent = \"absent\" if not match.group() else \"present\"\n\n            # Create a dictionary with the clinically significant finding and its details\n            finding_dict = {\n                \"finding\": finding,\n                \"absent\": absent,\n                \"text\": relevant_text.strip()\n            }\n\n            # Add the finding to the list of clinically relevant findings and diseases\n            clinically_relevant_findings.append(finding_dict)\n\n    return json.dumps(clinically_relevant_findings, indent=4)\n\n\n# Example usage:\njsonIni = ['8 mm right middle lobe pulmonary nodule', 'aortic atherosclerotic vascular calcification', \n           'atherosclerotic calcifications of the aorta', 'bilateral apical scarring', \n           'bilateral reticular opacities', 'bronchial obstruction', \n           'bronchiectasis', 'calcified granuloma left upper lobe', \n           'cardiomegaly', 'diffuse right lower lobe airspace opacity', \n           'elevation of right hemidiaphragm', 'fibrotic scarring', \n           'flattened diaphragm', 'hyperinflated lungs', \n           'increased retrosternal airspace', 'infiltrate in the lingula', \n           'infiltrate in the right middle lobe', 'infiltrate in the right upper lobe', \n           'interstitial opacities', 'large breast mass', \n           'left lower lobe air space opacity with consolidation atelectasis', \n           'left lower lobe of consolidation or atelectasis', \n           'low lung volumes with bronchovascular crowding', \n           'lumbar degenerative disc disease', 'mild thoracic aortic dilatation', \n           'minimal right middle lobe atelectasis', \n           'multiple opacities in the right mid lung, 3 subsegmental atelectasis', \n           'no pleural effusion', 'normal cardiac contour', \n           'patchy left lower lobe airspace disease', \n           'posttraumatic deformities of the left posterior ribs', \n           'pulmonary edema due to acute respiratory distress syndrome (ARDS)', \n           'right-sided pleural effusion', 'small left-sided effusion', \n           'soft tissue density projected over the right mid chest', \n           'spine dextrocurvature', 'subepicardial fibrosis']\n\nText_to_analyze = \"The lungs are clear. There is no focal airspace consolidation. No pleural effusion or pneumothorax. Heart size and mediastinal contour are within normal limits. There are degenerative changes of the lumbar spine.\"\n\nprint(find_clinically_relevant_findings(jsonIni, Text_to_analyze))"
    }
]